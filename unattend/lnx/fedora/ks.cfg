# Fedora kickstart installation
#
text
install

# localization
lang en_US.UTF-8
keyboard --vckeymap=us --xlayouts='us','us'

# timezone
timezone America/Toronto

# services
selinux --enforcing
firewall --enabled
services --enabled=chronyd,cups,cups-browsed,dnf-automatic-install.timer,docker,NetworkManager,postfix,sshd
firstboot --disable
xconfig --startxonboot

# network
network --activate --bootproto=dhcp --device=link --hostname=fedora --onboot=yes

# disk
zerombr
clearpart --all --disklabel=gpt --initlabel 
bootloader --timeout=5
#
part /boot/efi --size=260 --label=efi --fstype=efi
part /boot --size=512 --label=boot --fstype=ext4
part pv.0 --size=1 --grow --fstype=lvmpv
volgroup vg0 pv.0
logvol swap --vgname=vg0 --hibernation --name=lv0_swap --label=swap --fstype=swap
logvol / --vgname=vg0 --size=10000 --name=lv0_root --label=root --fstype=ext4
%include /tmp/partitions

# users
group --name=docker
%include /tmp/secret

# packages
# additional packages in post section depending if Gnome is installed
%packages
@core
@hardware-support
@standard
avahi
bluez
bluez-tools
cups
dnf-automatic
dnf-plugins-extras-tracer
docker
docker-compose
expect
hddtemp
hdparm
htop
jq
lastpass-cli
lm_sensors
mailx
mc
nss-mdns
nvme-cli
pass
perl
powerline
postfix
vim-enhanced
wpa_supplicant
# gnome
@GNOME
gnome-calculator
gnome-shell-extension-dash-to-dock
gnome-shell-extension-workspace-indicator
gnome-tweaks
libXScrnSaver
simple-scan
vim-X11
xorg-x11-drv-vmware
-baobab
-cheese
-eog
-fedora-release-notes
-gnome-boxes
-gnome-calendar
-gnome-clocks
-gnome-contacts
-gnome-getting-started-docs
-gnome-initial-setup
-gnome-maps
-gnome-photos
-gnome-screenshot
-gnome-software
-gnome-user-docs
-gnome-weather
-orca
-rygel
-sushi
-totem
%end 

%pre --interpreter=/bin/bash
# disk partitioning
first_disk=$(list-harddrives | awk '{printf "%s ", $1; exit}')
all_disks=( $(list-harddrives | awk '{printf "%s ", $1}') )
all_raid=( $(lsblk --list --noheadings --include 3,8,259 --output NAME,TYPE | awk '/raid/ {print $1}' | uniq) )
all_partitions=( $(lsblk --list --noheadings --include 3,8,259 --output NAME,TYPE | awk '/part/ {printf "%s ", $1}') )
total_size=$(list-harddrives | awk '/'"${first_disk}"'/ {printf "%d", $2}')
swap_size=$(free --mebi | awk '/Mem/ {print 150/100*$2}')

# clear info on disks (raid)
vgchange --activate n
for x in ${all_raid[*]}; do
    wipefs --all /dev/$x
    mdadm --stop /dev/$x
    mdadm --remove /dev/$x
done
for x in ${all_disks[*]}; do 
    for p in ${all_partitions[*]}; do
        mdadm --zero-superblock --force /dev/$p
        wipefs --all /dev/$p
    done
    mdadm --zero-superblock --force /dev/$x
    wipefs --all /dev/$x && sgdisk --zap-all /dev/$x
done
# add partitions if drive is capable
if [[ total_size -ge 51200 ]]; then 
    echo "logvol /var --vgname=vg0 --size=30000 --name=lv0_var --label=var --fstype=ext4" > /tmp/partitions
fi
if [[ total_size -ge 81920 ]]; then 
    echo "logvol /home --vgname=vg0 --size=30000 ---name=lv0_home --label=home --fstype=ext4" >> /tmp/partitions
fi
#
# turn the command-line options into variables
ks_url=`sed 's/.*ks_url=\([^ ]*\).*/\1/' /proc/cmdline`
wget --directory-prefix=/tmp --quiet "$ks_url"/{secret,authorized_keys}
%end

%post --interpreter=/bin/bash --nochroot
cp /tmp/{secret,authorized_keys} /mnt/sysimage/tmp/
%end

%post --interpreter=/bin/bash --log=/root/ks-post.log
set -x
logger --tag post_command 'start post_command'
    postUsername=$( sed --silent 's/.*--name=\([^ ]*\).*/\1/p' /tmp/secret )
    postOsname=$( sed --silent 's/^NAME=\([^ ]*\).*/\1/p' /etc/os-release )
    postOsversion=$( sed --silent 's/^VERSION_ID=\([^ ]*\).*/\1/p' /etc/os-release )
    postSysvendor=$( cat /sys/class/dmi/id/sys_vendor )
    postSysname=$( cat /sys/class/dmi/id/product_name )
    postSyssn=$( sed 's/ //g' /sys/class/dmi/id/product_serial )
    # ALBERT="${postOsname}_${postOsversion}"
    ALBERT="${postOsname}_Rawhide"
#
logger --tag post_command 'modifying bashrc'
    printf '%s\n' \
    '#' \
    'if tty | grep --quiet pts; then' \
    '  if [[ -f `which powerline-daemon` ]]; then' \
    '    powerline-daemon --quiet' \
    '    POWERLINE_BASH_CONTINUATION=1' \
    '    POWERLINE_BASH_SELECT=1' \
    '    . /usr/share/powerline/bash/powerline.sh' \
    '  fi' \
    'fi' >> /etc/bashrc
logger --tag post_command 'modifying grub defaults'
    sed --in-place 's/^GRUB_TERMINAL_OUTPUT/#GRUB_TERMINAL_OUTPUT/g; s/ rhgb//g; s/ silent//g' /etc/default/grub
logger --tag post_command 'modifying console blanking'
    printf '\e[9;5]\e[14;5]' >> /etc/issue
logger --tag post_command 'Setup DNF automatic'
    sed --in-place 's/^apply_updates.*/apply_updates = yes/g; s/^email_from.*/email_from = root@localhost.com/g; s/^emit_via/#emit_via/g' /etc/dnf/automatic.conf
    wget --directory-prefix=/usr/local/sbin --quiet https://raw.githubusercontent.com/agross/dnf-automatic-restart/master/dnf-automatic-restart
    mkdir --parents /etc/systemd/system/dnf-automatic-install.service.d
    printf '%s\n' 'ExecStartPost=/usr/local/sbin/dnf-automatic-restart -r 6' > /etc/systemd/system/dnf-automatic-install.service.d/override.conf
logger --tag post_command 'modifying fstab'
    printf '%s\n' 'filer:/volume1/share /opt/filer nfs nfsvers=3,proto=tcp,rw,auto,hard,rsize=8192,wsize=8192 0 0' >> /etc/fstab
logger --tag post_command 'modifying logrotate.conf'
    sed --in-place 's/^#compress/compress/g; s/\(weekly\|monthly\)/daily/g; s/weeks/days/g; s/ 4/ 7/g' /etc/logrotate.conf
logger --tag late_command 'Setting nut'
    if [[ -f /etc/ups/nut.conf ]]; then
        sed --in-place 's/^MODE=.*/MODE=netclient/g' /etc/ups/nut.conf
        sed --in-place '0,/^# MONITOR .*/s/^# MONITOR .*/MONITOR ups@filer.alihome.com 1 monuser secret slave\n&/' /etc/ups/upsmon.conf
        systemctl enable nut-monitor
    fi
logger --tag post_command 'modifying sysctl swappiness'
    printf '%s\n' 'vm.swappiness = 10' >> /etc/sysctl.d/99-sysctl.conf
logger --tag post_command 'modifying firewall'
    firewall-offline-cmd --zone=home --add-source={192.168.0.0/16,172.0.0.0/8}
    firewall-offline-cmd --zone=home --add-service={dhcpv6-client,ipp-client,mdns,nfs,nfs3,nut,samba-client,smtp,ssh,upnp-client,vnc-server}
logger --tag post_command 'modifying gdm'
    sed --in-place 's/^#WaylandEnable/WaylandEnable/g' /etc/gdm/custom.conf
logger --tag post_command 'modifying vnc authentication'
    sed --in-place "s/'tls-anon'/'none','tls-anon'/g" /usr/share/glib-2.0/schemas/org.gnome.desktop.remote-desktop.gschema.xml
#
logger --tag post_command 'Install extra packages'
    if [[ $(find /usr/share/gnome -name gnome-version.xml) ]]; then
        wget --accept 'albert*x86_64.rpm' --directory-prefix=/tmp --execute robots=off --level=1 --no-directories --no-parent --quiet --recursive "https://download.opensuse.org/repositories/home:/manuelschneid3r/${ALBERT}/x86_64/"
        dnf install --assumeyes /tmp/albert*.rpm
        if [[ $postSysvendor == VMware* ]]; then
            dnf install --assumeyes mesa-libxatracker ncurses-compat-libs open-vm-tools-desktop xorg-x11-drv-vmware
        fi
    else
        dnf install --assumeyes nut
    fi
#
logger --tag post_command 'Setup dotfiles'
    su --login "${postUsername}" --command " \
        bash <( curl --silent --location --url https://github.com/forwardcomputers/dotfiles/raw/master/bin/dotfiles )"
#
logger --tag late_command 'Add first run script - root'
    mkdir /root/.ssh
    chmod 700 /root/.ssh
    cp /tmp/authorized_keys /root/.ssh
    chown --recursive 0:0 /root/.ssh
    chmod 600 /root/.ssh/authorized_keys
    printf '%s\n' \
        '#!/bin/bash' \
        '#' \
        'su --login '${postUsername}' --command "\
            export SU_COMMAND=true; \
            ~/bin/dapp desktop_all ; \
            ~/bin/dapp remove dserver"' \
        '#' \
        '#until lpstat -p laser | grep -q "laser" ; do pause 1 ; done' \
        '#lpadmin -d laser' \
        'postqueue -f' \
        '#' \
        'sed --in-place "/@reboot root/d" /etc/crontab' \
        'rm --force /etc/rc.once' \
        '#' > /etc/rc.once
    chmod 744 /etc/rc.once
    sed --in-place 's/^MAILTO.*/MAILTO=""/g; $a@reboot root /etc/rc.once' /etc/crontab
logger --tag post_command 'Setup postfix and mail out install message'
    mkfifo /var/spool/postfix/public/pickup
    sed --in-place '0,/^#relayhost =.*/s/^#relayhost =.*/relayhost = [filer.alihome.com]:25\n&/' /etc/postfix/main.cf
    echo "Finished installing ${postOsname} Version ${postOsversion}" | mail -s "${postSysvendor} ${postSysname} - ${postSyssn}" alim@forwardcomputers.com
logger --tag post_command 'end post_command'
#
%end

reboot --eject
